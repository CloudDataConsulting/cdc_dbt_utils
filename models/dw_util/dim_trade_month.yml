version: 2

models:
  - name: dim_trade_month
    description: |
      Trade calendar month dimension table containing one row per trade month, derived from dim_trade_week for consistency.
      Provides month-level aggregations and attributes for retail/trade calendar analysis at monthly granularity.

      Since all trade calendar patterns have the same month boundaries (they differ only in week allocation within months),
      this model has a single record per trade month with pattern-specific week count columns.

      Column naming follows CDC standards:
      - _dt for dates/timestamps
      - _num for numbers
      - _flg for boolean flags
      - _nm for names
      - _key for keys in YYYYMMDD or YYYYMM format
      - _txt for text strings
      - _abbr for abbreviations

      Key Features:
      - Single record per trade month (not per pattern)
      - Pattern-specific week count columns (trade_weeks_in_month_445_num, etc.)
      - Derived from dim_trade_week to ensure consistency
      - Includes special records (-1: Unknown, -2: Invalid, -3: Not Applicable)
      - Navigation keys for time series analysis

      Pattern Details:
      - 445: Each quarter has 4-4-5 week months (13 weeks per quarter)
      - 454: Each quarter has 4-5-4 week months (13 weeks per quarter)
      - 544: Each quarter has 5-4-4 week months (13 weeks per quarter)

    columns:
      # Primary key
      - name: trade_month_key
        description: "Primary key as YYYYMM format (e.g., 202301 for January 2023)"
        data_tests:
          - unique
          - not_null

      # Core identifiers
      - name: trade_year_num
        description: "Trade year"
        data_tests:
          - not_null

      - name: trade_month_num
        description: "Trade month number within the year (1-12)"
        data_tests:
          - not_null
          - accepted_values:
              values: [-3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]

      - name: trade_month_nm
        description: "Trade month name (January through December)"
        data_tests:
          - not_null

      - name: trade_month_abbr
        description: "Three-letter month abbreviation (Jan, Feb, etc.)"
        data_tests:
          - not_null

      # Quarter information
      - name: trade_quarter_num
        description: "Trade quarter number (1-4)"
        data_tests:
          - not_null
          - accepted_values:
              values: [-3, -2, -1, 1, 2, 3, 4]

      - name: trade_quarter_nm
        description: "Trade quarter name short (Q1, Q2, Q3, Q4)"
        data_tests:
          - not_null

      - name: trade_quarter_full_nm
        description: "Trade quarter name full (First, Second, Third, Fourth)"
        data_tests:
          - not_null

      - name: trade_quarter_start_dt
        description: "Start date of the trade quarter"
        data_tests:
          - not_null

      - name: trade_quarter_start_key
        description: "Date key (YYYYMMDD) of the trade quarter start"
        data_tests:
          - not_null

      - name: trade_quarter_end_dt
        description: "End date of the trade quarter"
        data_tests:
          - not_null

      - name: trade_quarter_end_key
        description: "Date key (YYYYMMDD) of the trade quarter end"
        data_tests:
          - not_null

      # Month boundaries
      - name: trade_month_start_dt
        description: "First day (Sunday) of the trade month"
        data_tests:
          - not_null

      - name: trade_month_end_dt
        description: "Last day (Saturday) of the trade month"
        data_tests:
          - not_null

      - name: trade_month_start_key
        description: "Date key (YYYYMMDD) of the trade month's first day"
        data_tests:
          - not_null

      - name: trade_month_end_key
        description: "Date key (YYYYMMDD) of the trade month's last day"
        data_tests:
          - not_null

      # Position metrics
      - name: trade_month_in_quarter_num
        description: "Position of month within the quarter (1-3)"
        data_tests:
          - not_null
          - accepted_values:
              values: [-3, -2, -1, 1, 2, 3]

      # Week metrics
      - name: first_week_of_month_num
        description: "Trade week number of the first week in this month"
        data_tests:
          - not_null

      - name: last_week_of_month_num
        description: "Trade week number of the last week in this month"
        data_tests:
          - not_null

      - name: weeks_in_month_num
        description: "Total number of weeks in the month (typically 4 or 5)"
        data_tests:
          - not_null

      - name: days_in_month_num
        description: "Total number of days in the month (typically 28 or 35)"
        data_tests:
          - not_null

      - name: contains_leap_week_flg
        description: "Flag indicating if this month contains the 53rd week (leap week)"
        data_tests:
          - not_null

      # Pattern-specific week counts
      - name: trade_weeks_in_month_445_num
        description: "Number of weeks in this month for 4-4-5 pattern"
        data_tests:
          - not_null

      - name: is_5_week_month_445_flg
        description: "Flag indicating if this is a 5-week month in 4-4-5 pattern"
        data_tests:
          - not_null

      - name: trade_weeks_in_month_454_num
        description: "Number of weeks in this month for 4-5-4 pattern"
        data_tests:
          - not_null

      - name: is_5_week_month_454_flg
        description: "Flag indicating if this is a 5-week month in 4-5-4 pattern"
        data_tests:
          - not_null

      - name: trade_weeks_in_month_544_num
        description: "Number of weeks in this month for 5-4-4 pattern"
        data_tests:
          - not_null

      - name: is_5_week_month_544_flg
        description: "Flag indicating if this is a 5-week month in 5-4-4 pattern"
        data_tests:
          - not_null

      # Display formats
      - name: trade_month_year_nm
        description: "Month and year description (e.g., 'January 2023')"
        data_tests:
          - not_null

      - name: trade_year_month_txt
        description: "Trade year and month text (e.g., 'TY2023-M01')"
        data_tests:
          - not_null

      - name: trade_month_year_abbr
        description: "Abbreviated month and year (e.g., 'Jan 2023')"
        data_tests:
          - not_null

      # Year context
      - name: trade_year_start_dt
        description: "Start date of the trade year"
        data_tests:
          - not_null

      - name: trade_year_start_key
        description: "Date key (YYYYMMDD) of the trade year start"
        data_tests:
          - not_null

      - name: trade_year_end_dt
        description: "End date of the trade year"
        data_tests:
          - not_null

      - name: trade_year_end_key
        description: "Date key (YYYYMMDD) of the trade year end"
        data_tests:
          - not_null

      # Overall numbering
      - name: trade_month_overall_num
        description: "Sequential trade month number since year 2000, useful for month-over-month calculations"
        data_tests:
          - not_null

      # Navigation keys
      - name: prior_trade_month_key
        description: "Key for the prior trade month"

      - name: next_trade_month_key
        description: "Key for the next trade month"

      - name: trade_month_last_year_key
        description: "Key for the same month last year (12 months prior)"

      # Metadata columns
      - name: dw_synced_ts
        description: "Timestamp when record was created/updated"
        data_tests:
          - not_null

      - name: dw_source_nm
        description: "Source system name"
        data_tests:
          - not_null

      - name: create_user_id
        description: "User who created the record"
        data_tests:
          - not_null

      - name: create_ts
        description: "Timestamp when record was created"
        data_tests:
          - not_null

    data_tests:
      # Test that trade month key follows expected format
      - dbt_utils.expression_is_true:
          expression: "trade_month_key = trade_year_num * 100 + trade_month_num"
          config:
            where: "trade_month_key > 0"
            error_if: ">0"

      # Test that days in month aligns with weeks (7 days per week)
      - dbt_utils.expression_is_true:
          expression: "days_in_month_num = weeks_in_month_num * 7"
          config:
            where: "trade_month_key > 0"
            error_if: ">0"

      # Test that month in quarter is correct based on month number
      - dbt_utils.expression_is_true:
          expression: |
            case
              when trade_month_num in (1, 4, 7, 10) then trade_month_in_quarter_num = 1
              when trade_month_num in (2, 5, 8, 11) then trade_month_in_quarter_num = 2
              when trade_month_num in (3, 6, 9, 12) then trade_month_in_quarter_num = 3
              else true
            end
          config:
            where: "trade_month_key > 0"
            error_if: ">0"

      # Test that month start dates are always Sundays
      - dbt_utils.expression_is_true:
          expression: "dayofweek(trade_month_start_dt) = 0"  # Sunday = 0 in Snowflake
          config:
            where: "trade_month_key > 0"
            error_if: ">0"

      # Test that month end dates are always Saturdays
      - dbt_utils.expression_is_true:
          expression: "dayofweek(trade_month_end_dt) = 6"  # Saturday = 6 in Snowflake
          config:
            where: "trade_month_key > 0"
            error_if: ">0"

      # Test for prior month key validity - simplified
      - dbt_utils.expression_is_true:
          expression: |
            prior_trade_month_key is null
            or prior_trade_month_key < 0
            or prior_trade_month_key between 200001 and 203012
          config:
            where: "trade_month_key > 0"
            error_if: ">0"

      # Test for next month key validity - simplified
      - dbt_utils.expression_is_true:
          expression: |
            next_trade_month_key is null
            or next_trade_month_key < 0
            or next_trade_month_key between 200001 and 203012
          config:
            where: "trade_month_key > 0"
            error_if: ">0"

      # Test for last year month key validity - simplified
      - dbt_utils.expression_is_true:
          expression: |
            trade_month_last_year_key is null
            or trade_month_last_year_key < 0
            or trade_month_last_year_key between 200001 and 203012
          config:
            where: "trade_month_key > 0"
            error_if: ">0"

      # Test that 5-week flags align with week counts
      - dbt_utils.expression_is_true:
          expression: |
            (is_5_week_month_445_flg = 1 and trade_weeks_in_month_445_num >= 5)
            or (is_5_week_month_445_flg = 0 and trade_weeks_in_month_445_num < 5)
          config:
            where: "trade_month_key > 0"
            error_if: ">0"

      - dbt_utils.expression_is_true:
          expression: |
            (is_5_week_month_454_flg = 1 and trade_weeks_in_month_454_num >= 5)
            or (is_5_week_month_454_flg = 0 and trade_weeks_in_month_454_num < 5)
          config:
            where: "trade_month_key > 0"
            error_if: ">0"

      - dbt_utils.expression_is_true:
          expression: |
            (is_5_week_month_544_flg = 1 and trade_weeks_in_month_544_num >= 5)
            or (is_5_week_month_544_flg = 0 and trade_weeks_in_month_544_num < 5)
          config:
            where: "trade_month_key > 0"
            error_if: ">0"
