version: 2

models:
  - name: dim_trade_week
    description: |
      Trade calendar week dimension table containing one row per trade week, derived from dim_trade_date.

      This dimension provides weekly aggregations and supports all three trade calendar patterns
      (4-4-5, 4-5-4, 5-4-4) in a single table. Each week runs from Sunday to Saturday.

      Column naming follows CDC standards:
      - _dt for dates/timestamps
      - _num for numbers
      - _flg for boolean flags
      - _nm for names
      - _key for primary and foreign keys
      - _txt for text strings
      - _abbr for abbreviations

    columns:
      # Primary Key
      - name: trade_week_key
        description: "Primary key in YYYYWW format (e.g., 202301 for 2023 week 1)"
        data_tests:
          - unique
          - not_null

      # Alternate Key
      - name: trade_week_start_key
        description: "Alternate key using the first day of week in YYYYMMDD format"
        data_tests:
          - unique
          - not_null

      # Week Identifiers
      - name: trade_year_num
        description: "Trade year"
        data_tests:
          - not_null

      - name: trade_week_num
        description: "Trade week number within the year (1-52 or 1-53 for leap weeks)"
        data_tests:
          - not_null
          - accepted_values:
              values: [-3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53]

      # Week Boundaries
      - name: trade_week_start_dt
        description: "First day (Sunday) of the trade week"
        data_tests:
          - not_null

      - name: trade_week_end_dt
        description: "Last day (Saturday) of the trade week"
        data_tests:
          - not_null

      - name: trade_week_end_key
        description: "Date key (YYYYMMDD) of the trade week's Saturday"
        data_tests:
          - not_null

      # Week Position Metrics
      - name: trade_week_overall_num
        description: "Sequential trade week number since earliest trade week"
        data_tests:
          - not_null

      - name: trade_week_of_quarter_num
        description: "Week number within the trade quarter (1-13, or 14 for leap weeks)"
        data_tests:
          - not_null
          - accepted_values:
              values: [-3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]

      - name: trade_week_of_month_445_num
        description: "Week number within the month for 4-4-5 pattern"
        data_tests:
          - not_null
          - accepted_values:
              values: [-3, -2, -1, 1, 2, 3, 4, 5, 6]

      - name: trade_week_of_month_454_num
        description: "Week number within the month for 4-5-4 pattern"
        data_tests:
          - not_null
          - accepted_values:
              values: [-3, -2, -1, 1, 2, 3, 4, 5, 6]

      - name: trade_week_of_month_544_num
        description: "Week number within the month for 5-4-4 pattern"
        data_tests:
          - not_null
          - accepted_values:
              values: [-3, -2, -1, 1, 2, 3, 4, 5, 6]

      # Month Attributes (All Three Patterns)
      - name: trade_month_445_num
        description: "Trade month number for 4-4-5 pattern (1-12)"
        data_tests:
          - not_null
          - accepted_values:
              values: [-3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]

      - name: trade_month_454_num
        description: "Trade month number for 4-5-4 pattern (1-12)"
        data_tests:
          - not_null
          - accepted_values:
              values: [-3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]

      - name: trade_month_544_num
        description: "Trade month number for 5-4-4 pattern (1-12)"
        data_tests:
          - not_null
          - accepted_values:
              values: [-3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]

      - name: trade_month_445_nm
        description: "Trade month name for 4-4-5 pattern"
        data_tests:
          - not_null

      - name: trade_month_454_nm
        description: "Trade month name for 4-5-4 pattern"
        data_tests:
          - not_null

      - name: trade_month_544_nm
        description: "Trade month name for 5-4-4 pattern"
        data_tests:
          - not_null

      - name: trade_month_abbr
        description: "Three-letter trade month abbreviation"
        data_tests:
          - not_null

      - name: trade_month_overall_num
        description: "Sequential trade month number since base year"
        data_tests:
          - not_null

      - name: trade_yearmonth_num
        description: "Trade year-month as YYYYMM integer"
        data_tests:
          - not_null

      # Month Boundaries for All Patterns
      - name: trade_month_445_start_dt
        description: "Start date of the trade month for 4-4-5 pattern"
        data_tests:
          - not_null

      - name: trade_month_445_start_key
        description: "Date key of trade month start for 4-4-5 pattern (YYYYMMDD)"
        data_tests:
          - not_null

      - name: trade_month_445_end_dt
        description: "End date of the trade month for 4-4-5 pattern"
        data_tests:
          - not_null

      - name: trade_month_445_end_key
        description: "Date key of trade month end for 4-4-5 pattern (YYYYMMDD)"
        data_tests:
          - not_null

      - name: trade_month_454_start_dt
        description: "Start date of the trade month for 4-5-4 pattern"
        data_tests:
          - not_null

      - name: trade_month_454_start_key
        description: "Date key of trade month start for 4-5-4 pattern (YYYYMMDD)"
        data_tests:
          - not_null

      - name: trade_month_454_end_dt
        description: "End date of the trade month for 4-5-4 pattern"
        data_tests:
          - not_null

      - name: trade_month_454_end_key
        description: "Date key of trade month end for 4-5-4 pattern (YYYYMMDD)"
        data_tests:
          - not_null

      - name: trade_month_544_start_dt
        description: "Start date of the trade month for 5-4-4 pattern"
        data_tests:
          - not_null

      - name: trade_month_544_start_key
        description: "Date key of trade month start for 5-4-4 pattern (YYYYMMDD)"
        data_tests:
          - not_null

      - name: trade_month_544_end_dt
        description: "End date of the trade month for 5-4-4 pattern"
        data_tests:
          - not_null

      - name: trade_month_544_end_key
        description: "Date key of trade month end for 5-4-4 pattern (YYYYMMDD)"
        data_tests:
          - not_null

      # Quarter Attributes
      - name: trade_quarter_num
        description: "Trade quarter number (1-4)"
        data_tests:
          - not_null
          - accepted_values:
              values: [-3, -2, -1, 1, 2, 3, 4]

      - name: trade_quarter_nm
        description: "Trade quarter name short (Q1, Q2, Q3, Q4)"
        data_tests:
          - not_null
          - accepted_values:
              values: ['Q1', 'Q2', 'Q3', 'Q4', 'N/A', 'INV', 'UNK']

      - name: trade_quarter_full_nm
        description: "Trade quarter name full (First, Second, Third, Fourth)"
        data_tests:
          - not_null
          - accepted_values:
              values: ['First', 'Second', 'Third', 'Fourth', 'Not Applicable', 'Invalid', 'Unknown']

      - name: trade_quarter_start_dt
        description: "Start date of the trade quarter"
        data_tests:
          - not_null

      - name: trade_quarter_start_key
        description: "Date key of trade quarter start (YYYYMMDD)"
        data_tests:
          - not_null

      - name: trade_quarter_end_dt
        description: "End date of the trade quarter"
        data_tests:
          - not_null

      - name: trade_quarter_end_key
        description: "Date key of trade quarter end (YYYYMMDD)"
        data_tests:
          - not_null

      # Year Attributes
      - name: trade_year_start_dt
        description: "Start date of the trade year"
        data_tests:
          - not_null

      - name: trade_year_start_key
        description: "Date key of trade year start (YYYYMMDD)"
        data_tests:
          - not_null

      - name: trade_year_end_dt
        description: "End date of the trade year"
        data_tests:
          - not_null

      - name: trade_year_end_key
        description: "Date key of trade year end (YYYYMMDD)"
        data_tests:
          - not_null

      - name: trade_leap_week_flg
        description: "Flag indicating if this is the 53rd week (leap week)"
        data_tests:
          - not_null

      - name: weeks_in_trade_year_num
        description: "Total number of weeks in the trade year (52 or 53)"
        data_tests:
          - not_null
          - accepted_values:
              values: [-3, -2, -1, 52, 53]

      # Week Labels
      - name: trade_week_label
        description: "Week label (e.g., 'W01')"
        data_tests:
          - not_null

      - name: trade_week_full_label
        description: "Full week label (e.g., '2023-W01')"
        data_tests:
          - not_null

      # Week Metrics
      - name: days_in_week
        description: "Number of days in the week (always 7 for complete weeks)"
        data_tests:
          - not_null
          - accepted_values:
              values: [7]

      # Navigation Keys
      - name: prior_trade_week_key
        description: "Key for the prior trade week"

      - name: next_trade_week_key
        description: "Key for the next trade week"

      - name: trade_week_last_year_key
        description: "Key for the same week last year (52 weeks prior)"

      # Metadata Columns
      - name: dw_synced_ts
        description: "Timestamp when record was created/updated"
        data_tests:
          - not_null

      - name: dw_source_nm
        description: "Source system name"
        data_tests:
          - not_null

      - name: create_user_id
        description: "User who created the record"
        data_tests:
          - not_null

      - name: create_ts
        description: "Timestamp when record was created"
        data_tests:
          - not_null

    data_tests:
      # Test that trade week end date is 6 days after start
      - dbt_utils.expression_is_true:
          expression: "datediff(day, trade_week_start_dt, trade_week_end_dt) = 6"
          config:
            where: "trade_week_key > 0"
            error_if: ">0"

      # Test that weeks are sequential within year
      - dbt_utils.expression_is_true:
          expression: |
            trade_week_num = lag(trade_week_num) over (partition by trade_year_num order by trade_week_num) + 1
            or trade_week_num = 1
          config:
            where: "trade_week_key > 0"
            error_if: ">0"

      # Test that navigation keys point to valid weeks
      - dbt_utils.expression_is_true:
          expression: |
            (prior_trade_week_key is null or prior_trade_week_key in (select trade_week_key from {{ this }}))
            and (next_trade_week_key is null or next_trade_week_key in (select trade_week_key from {{ this }}))
            and (trade_week_last_year_key is null or trade_week_last_year_key in (select trade_week_key from {{ this }}))
          config:
            where: "trade_week_key > 0"
            error_if: ">0"

      # Test week of month values align with month patterns
      - dbt_utils.expression_is_true:
          expression: |
            case
              when trade_month_445_num in (1, 4, 7, 10) and trade_month_445_num in (2, 5, 8, 11)
                then trade_week_of_month_445_num <= 4
              when trade_month_445_num in (3, 6, 9, 12)
                then trade_week_of_month_445_num <= 5
              else true
            end
          config:
            where: "trade_week_key > 0 and trade_leap_week_flg = 0"
            error_if: ">0"

      # Test that week start dates are always Sundays
      - dbt_utils.expression_is_true:
          expression: "dayofweek(trade_week_start_dt) = 0"  # Sunday = 0 in Snowflake
          config:
            where: "trade_week_key > 0"
            error_if: ">0"

      # Test that week end dates are always Saturdays
      - dbt_utils.expression_is_true:
          expression: "dayofweek(trade_week_end_dt) = 6"  # Saturday = 6 in Snowflake
          config:
            where: "trade_week_key > 0"
            error_if: ">0"
