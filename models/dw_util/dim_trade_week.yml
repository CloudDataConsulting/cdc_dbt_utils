version: 2

models:
  - name: dim_trade_week
    description: |
      Trade calendar week dimension table containing one row per trade week, derived from dim_trade_date for consistency.
      Provides week-level aggregations and attributes for retail/trade calendar analysis at weekly granularity.
      Includes all three common retail patterns (445, 454, 544) month attributes in a single table.
      
      Column naming follows CDC standards:
      - _dt for dates/timestamps
      - _num for numbers
      - _flg for boolean flags
      - _nm for names
      - _key for date keys in YYYYMMDD format
      - _txt for text strings
      
      Key Features:
      - Primary key is trade_week_start_key (the Sunday of each week)
      - Single table with all three pattern month attributes (445, 454, 544)
      - Derived from dim_trade_date to ensure consistency
      - Trade weeks run Sunday to Saturday following retail calendar conventions
      
      Pattern Details:
      - 445: Each quarter has 4-4-5 week months (13 weeks per quarter)
      - 454: Each quarter has 4-5-4 week months (13 weeks per quarter)  
      - 544: Each quarter has 5-4-4 week months (13 weeks per quarter)
    
    columns:
      - name: trade_week_key
        description: "Primary key using the trade_week_start_key (first day of week in YYYYMMDD format)"
        data_tests:
          - unique
          - not_null
      
      # Week boundaries
      - name: trade_week_start_dt
        description: "First day (Sunday) of the trade week"
        data_tests:
          - not_null
      
      - name: trade_week_end_dt
        description: "Last day (Saturday) of the trade week"
        data_tests:
          - not_null
      
      - name: trade_week_start_key
        description: "Date key (YYYYMMDD) of the trade week's Sunday (same as primary key)"
        data_tests:
          - not_null
      
      - name: trade_week_end_key
        description: "Date key (YYYYMMDD) of the trade week's Saturday"
        data_tests:
          - not_null
      
      # Core trade identifiers
      - name: trade_year_num
        description: "Trade year (same for all patterns)"
        data_tests:
          - not_null
      
      - name: trade_week_num
        description: "Trade week number within the year (1-52 or 1-53 for leap weeks)"
        data_tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53]
      
      - name: trade_week_of_year_num
        description: "Trade week number within the year (same as trade_week_num)"
        data_tests:
          - not_null
      
      - name: trade_week_of_quarter_num
        description: "Week number within the quarter (1-13, or 14 for leap weeks)"
        data_tests:
          - not_null
      
      - name: trade_week_overall_num
        description: "Sequential trade week number since earliest trade week, useful for week-over-week calculations"
        data_tests:
          - not_null
      
      # 445 Pattern month attributes
      - name: trade_month_445_num
        description: "Trade month for 4-4-5 pattern (1-12)"
        data_tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
      
      - name: trade_month_445_nm
        description: "Trade month name for 4-4-5 pattern"
        data_tests:
          - not_null
      
      - name: trade_week_of_month_445_num
        description: "Week number within the month for 4-4-5 pattern"
        data_tests:
          - not_null
      
      # 454 Pattern month attributes
      - name: trade_month_454_num
        description: "Trade month for 4-5-4 pattern (1-12)"
        data_tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
      
      - name: trade_month_454_nm
        description: "Trade month name for 4-5-4 pattern"
        data_tests:
          - not_null
      
      - name: trade_week_of_month_454_num
        description: "Week number within the month for 4-5-4 pattern"
        data_tests:
          - not_null
      
      # 544 Pattern month attributes
      - name: trade_month_544_num
        description: "Trade month for 5-4-4 pattern (1-12)"
        data_tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
      
      - name: trade_month_544_nm
        description: "Trade month name for 5-4-4 pattern"
        data_tests:
          - not_null
      
      - name: trade_week_of_month_544_num
        description: "Week number within the month for 5-4-4 pattern"
        data_tests:
          - not_null
      
      # Quarter attributes (same for all patterns)
      - name: trade_quarter_num
        description: "Trade quarter number (1-4, same for all patterns)"
        data_tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4]
      
      - name: trade_quarter_nm
        description: "Trade quarter name (First, Second, Third, Fourth)"
        data_tests:
          - not_null
          - accepted_values:
              values: ['First', 'Second', 'Third', 'Fourth']
      
      # Week metrics
      - name: days_in_week_num
        description: "Number of days in the week (7 for complete weeks, may be less for boundary weeks)"
        data_tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4, 5, 6, 7]
      
      - name: weeks_in_trade_year_num
        description: "Total number of weeks in the trade year (52 or 53)"
        data_tests:
          - not_null
          - accepted_values:
              values: [52, 53]
      
      - name: is_trade_leap_week_flg
        description: "Flag indicating if this is the 53rd week (leap week)"
        data_tests:
          - not_null
      
      # Display columns
      - name: trade_year_week_txt
        description: "Trade year and week text (e.g., 'TY2023-W01')"
        data_tests:
          - not_null
      
      # Current period flags
      - name: is_current_trade_week_flg
        description: "Flag indicating if this is the current trade week"
        data_tests:
          - not_null
      
      - name: is_prior_trade_week_flg
        description: "Flag indicating if this is the prior trade week"
        data_tests:
          - not_null
      
      - name: is_current_trade_year_flg
        description: "Flag indicating if this week is in the current trade year"
        data_tests:
          - not_null
      
      - name: is_past_trade_week_flg
        description: "Flag indicating if this week has ended (trade_week_end_dt < current date)"
        data_tests:
          - not_null
      
      # Relative metrics
      - name: trade_weeks_ago_num
        description: "Number of trade weeks ago from current date (negative for future weeks)"
        data_tests:
          - not_null
      
      # Metadata columns
      - name: dw_synced_ts
        description: "Timestamp when record was created/updated"
        data_tests:
          - not_null
      
      - name: dw_source_nm
        description: "Source system name (always 'dim_trade_week')"
        data_tests:
          - not_null
      
      - name: create_user_id
        description: "User who created the record"
        data_tests:
          - not_null
      
      - name: create_timestamp
        description: "Timestamp when record was created"
        data_tests:
          - not_null
    
    data_tests:
      # Test that trade week key matches the start key
      - dbt_utils.expression_is_true:
          expression: "trade_week_key = trade_week_start_key"
          config:
            error_if: ">0"
      
      # Test 445 pattern: months 1,4,7,10 have max 4 weeks; 2,5,8,11 have max 4 weeks; 3,6,9,12 have max 5 weeks
      - dbt_utils.expression_is_true:
          expression: |
            case 
              when trade_month_445_num in (1, 4, 7, 10) then trade_week_of_month_445_num <= 4
              when trade_month_445_num in (2, 5, 8, 11) then trade_week_of_month_445_num <= 4
              when trade_month_445_num in (3, 6, 9, 12) then trade_week_of_month_445_num <= 5
              else false
            end
          config:
            where: "is_trade_leap_week_flg = 0"  # Exclude leap weeks from this test
            error_if: ">0"
      
      # Test 454 pattern: months 1,4,7,10 have max 4 weeks; 2,5,8,11 have max 5 weeks; 3,6,9,12 have max 4 weeks
      - dbt_utils.expression_is_true:
          expression: |
            case 
              when trade_month_454_num in (1, 4, 7, 10) then trade_week_of_month_454_num <= 4
              when trade_month_454_num in (2, 5, 8, 11) then trade_week_of_month_454_num <= 5
              when trade_month_454_num in (3, 6, 9, 12) then trade_week_of_month_454_num <= 4
              else false
            end
          config:
            where: "is_trade_leap_week_flg = 0"  # Exclude leap weeks from this test
            error_if: ">0"
      
      # Test 544 pattern: months 1,4,7,10 have max 5 weeks; 2,5,8,11 have max 4 weeks; 3,6,9,12 have max 4 weeks
      - dbt_utils.expression_is_true:
          expression: |
            case 
              when trade_month_544_num in (1, 4, 7, 10) then trade_week_of_month_544_num <= 5
              when trade_month_544_num in (2, 5, 8, 11) then trade_week_of_month_544_num <= 4
              when trade_month_544_num in (3, 6, 9, 12) then trade_week_of_month_544_num <= 4
              else false
            end
          config:
            where: "is_trade_leap_week_flg = 0"  # Exclude leap weeks from this test
            error_if: ">0"
      
      # Test that all patterns have reasonable values for week of month (1-6, allowing for leap weeks)
      - dbt_utils.expression_is_true:
          expression: |
            trade_week_of_month_445_num between 1 and 6
            and trade_week_of_month_454_num between 1 and 6
            and trade_week_of_month_544_num between 1 and 6
          config:
            error_if: ">0"
      
      # Test that all patterns have reasonable values for week of quarter (1-14, allowing for leap weeks)
      - dbt_utils.expression_is_true:
          expression: |
            trade_week_of_quarter_num between 1 and 14
          config:
            error_if: ">0"
      
      # Test that trade week end date is correct based on days in week
      - dbt_utils.expression_is_true:
          expression: "datediff(day, trade_week_start_dt, trade_week_end_dt) = days_in_week_num - 1"
          config:
            error_if: ">0"