version: 2

models:
  - name: dim_trade_quarter
    description: |
      Trade calendar quarter dimension table containing one row per trade quarter, derived from dim_trade_month for consistency.
      Provides quarter-level aggregations and attributes for retail/trade calendar analysis at quarterly granularity.
      
      Since all trade calendar patterns have identical quarterly structure (13 weeks per quarter),
      this model has a single record per trade quarter.
      
      Column naming follows CDC standards:
      - _dt for dates/timestamps
      - _num for numbers
      - _flg for boolean flags
      - _nm for names
      - _key for date keys in YYYYMMDD format
      - _txt for text strings
      
      Key Features:
      - Single record per trade quarter (patterns are identical at quarter level)
      - Derived from dim_trade_month to ensure consistency
      - Trade quarters follow retail calendar conventions
      - All patterns have 13 weeks per quarter (14 weeks in Q4 for 53-week years)
      
      Pattern Details:
      - 445: Each quarter has 4-4-5 week months (13 weeks per quarter)
      - 454: Each quarter has 4-5-4 week months (13 weeks per quarter)  
      - 544: Each quarter has 5-4-4 week months (13 weeks per quarter)
    
    columns:
      # Primary key
      - name: trade_quarter_key
        description: "Primary key as trade year * 10 + trade quarter number (e.g., 20231 for 2023 Q1)"
        data_tests:
          - unique
          - not_null

      # Core trade calendar
      - name: trade_year_num
        description: "Trade year"
        data_tests:
          - not_null

      - name: trade_quarter_num
        description: "Trade quarter number within the year (1-4)"
        data_tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4]

      - name: trade_quarter_nm
        description: "Trade quarter name (First, Second, Third, Fourth)"
        data_tests:
          - not_null
          - accepted_values:
              values: ['First', 'Second', 'Third', 'Fourth']

      # Quarter boundaries
      - name: trade_quarter_start_dt
        description: "First day (Sunday) of the trade quarter"
        data_tests:
          - not_null

      - name: trade_quarter_end_dt
        description: "Last day (Saturday) of the trade quarter"
        data_tests:
          - not_null

      - name: trade_quarter_start_key
        description: "Date key (YYYYMMDD) of the trade quarter's first day"
        data_tests:
          - not_null

      - name: trade_quarter_end_key
        description: "Date key (YYYYMMDD) of the trade quarter's last day"
        data_tests:
          - not_null

      # Month metrics
      - name: first_month_of_quarter_num
        description: "Trade month number of the first month in this quarter"
        data_tests:
          - not_null
          - accepted_values:
              values: [1, 4, 7, 10]

      - name: last_month_of_quarter_num
        description: "Trade month number of the last month in this quarter"
        data_tests:
          - not_null
          - accepted_values:
              values: [3, 6, 9, 12]

      - name: months_in_quarter_num
        description: "Number of months in the quarter (always 3)"
        data_tests:
          - not_null
          - accepted_values:
              values: [3]

      # Week metrics
      - name: weeks_in_quarter_num
        description: "Total number of weeks in the quarter (13 normally, 14 with leap week)"
        data_tests:
          - not_null
          - accepted_values:
              values: [13, 14]

      - name: first_week_of_quarter_num
        description: "Trade week number of the first week in this quarter"
        data_tests:
          - not_null

      - name: last_week_of_quarter_num
        description: "Trade week number of the last week in this quarter"
        data_tests:
          - not_null

      - name: trade_weeks_in_quarter_num
        description: "Number of weeks in quarter (same as weeks_in_quarter_num, 13 or 14)"
        data_tests:
          - not_null
          - accepted_values:
              values: [13, 14]

      # Day metrics
      - name: days_in_quarter_num
        description: "Total number of days in the quarter (91 normally, 98 with leap week)"
        data_tests:
          - not_null
          - accepted_values:
              values: [91, 98]

      # Display formats
      - name: trade_quarter_txt
        description: "Trade quarter text (Q1, Q2, Q3, Q4)"
        data_tests:
          - not_null
          - accepted_values:
              values: ['Q1', 'Q2', 'Q3', 'Q4']

      - name: trade_quarter_year_nm
        description: "Quarter and year description (e.g., 'First Quarter 2023')"
        data_tests:
          - not_null

      - name: trade_year_quarter_txt
        description: "Trade year and quarter text (e.g., 'TY2023-Q1')"
        data_tests:
          - not_null

      - name: year_quarter_txt
        description: "Simple year-quarter text (e.g., '2023-Q1')"
        data_tests:
          - not_null

      - name: trade_quarter_position_txt
        description: "Quarter position description (First Quarter, Second Quarter, etc.)"
        data_tests:
          - not_null
          - accepted_values:
              values: ['First Quarter', 'Second Quarter', 'Third Quarter', 'Fourth Quarter']

      # Flags
      - name: contains_leap_week_flg
        description: "Flag indicating if this quarter contains the 53rd week (leap week)"
        data_tests:
          - not_null

      # Overall numbering
      - name: trade_quarter_overall_num
        description: "Sequential trade quarter number since earliest trade quarter, useful for quarter-over-quarter calculations"
        data_tests:
          - not_null

      # Metadata columns
      - name: dw_synced_ts
        description: "Timestamp when record was created/updated"
        data_tests:
          - not_null

      - name: dw_source_nm
        description: "Source system name (always 'dim_trade_quarter')"
        data_tests:
          - not_null

      - name: create_user_id
        description: "User who created the record"
        data_tests:
          - not_null

      - name: create_timestamp
        description: "Timestamp when record was created"
        data_tests:
          - not_null
    
    data_tests:
      # Test that trade quarter key follows expected format
      - dbt_utils.expression_is_true:
          expression: "trade_quarter_key = trade_year_num * 10 + trade_quarter_num"
          config:
            error_if: ">0"

      # Test that first month of quarter is correct
      - dbt_utils.expression_is_true:
          expression: |
            case 
              when trade_quarter_num = 1 then first_month_of_quarter_num = 1
              when trade_quarter_num = 2 then first_month_of_quarter_num = 4
              when trade_quarter_num = 3 then first_month_of_quarter_num = 7
              when trade_quarter_num = 4 then first_month_of_quarter_num = 10
              else false
            end
          config:
            error_if: ">0"

      # Test that last month of quarter is correct
      - dbt_utils.expression_is_true:
          expression: |
            case 
              when trade_quarter_num = 1 then last_month_of_quarter_num = 3
              when trade_quarter_num = 2 then last_month_of_quarter_num = 6
              when trade_quarter_num = 3 then last_month_of_quarter_num = 9
              when trade_quarter_num = 4 then last_month_of_quarter_num = 12
              else false
            end
          config:
            error_if: ">0"

      # Test that days in quarter aligns with weeks (7 days per week)
      - dbt_utils.expression_is_true:
          expression: "days_in_quarter_num = weeks_in_quarter_num * 7"
          config:
            error_if: ">0"

      # Test that quarters without leap weeks have exactly 13 weeks
      - dbt_utils.expression_is_true:
          expression: "weeks_in_quarter_num = 13"
          config:
            where: "contains_leap_week_flg = 0"
            error_if: ">0"

      # Test that only Q4 can have leap weeks (53rd week always falls in Q4)
      - dbt_utils.expression_is_true:
          expression: "trade_quarter_num = 4"
          config:
            where: "contains_leap_week_flg = 1"
            error_if: ">0"