version: 2

models:
  - name: dim_month
    description: |
      Calendar month dimension table containing one row per calendar month, derived from dim_date for consistency.
      Provides month-level aggregations and attributes for time series analysis at monthly granularity.

      Column naming follows CDC standards:
      - _dt for dates
      - _ts for timestamps
      - _num for numbers
      - _flg for boolean flags
      - _nm for names
      - _key for date keys in YYYYMMDD format or YYYYMM for month keys
      - _txt for text strings
      - _abbr for abbreviations

      Key Features:
      - Primary key is month_key (YYYYMM format)
      - Derived from dim_date to ensure consistency
      - Contains special records (-1, -2, -3) for Unknown, Invalid, and Not Applicable
      - Useful for financial reporting, trending, and month-over-month comparisons

    columns:
      - name: month_key
        description: "Primary key as YYYYMM integer representing the year and month"
        data_tests:
          - unique
          - not_null

      # Core identifiers
      - name: year_num
        description: "Calendar year as 4-digit integer"
        data_tests:
          - not_null

      - name: month_num
        description: "Month number within the year (1-12)"
        data_tests:
          - not_null
          - accepted_values:
              values: [-3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]

      - name: month_nm
        description: "Full name of the month (January, February, March, etc.)"
        data_tests:
          - not_null
          - accepted_values:
              values: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December', 'Not Applicable', 'Invalid', 'Unknown']

      - name: month_abbr
        description: "Three-letter abbreviation of the month (Jan, Feb, Mar, etc.)"
        data_tests:
          - not_null
          - accepted_values:
              values: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec', 'N/A', 'INV', 'UNK']

      # Quarter context
      - name: quarter_num
        description: "Quarter number (1-4) containing this month"
        data_tests:
          - not_null
          - accepted_values:
              values: [-3, -2, -1, 1, 2, 3, 4]

      - name: quarter_nm
        description: "Quarter name in Q format (Q1, Q2, Q3, Q4)"
        data_tests:
          - not_null
          - accepted_values:
              values: ['Q1', 'Q2', 'Q3', 'Q4', 'N/A', 'INV', 'UNK']

      - name: quarter_full_nm
        description: "Quarter full name (First, Second, Third, Fourth)"
        data_tests:
          - not_null
          - accepted_values:
              values: ['First', 'Second', 'Third', 'Fourth', 'Not Applicable', 'Invalid', 'Unknown']

      # Month boundaries
      - name: month_start_dt
        description: "First calendar date of the month"
        data_tests:
          - not_null

      - name: month_end_dt
        description: "Last calendar date of the month"
        data_tests:
          - not_null

      - name: month_start_key
        description: "Date key (YYYYMMDD) of the month's first day"
        data_tests:
          - not_null

      - name: month_end_key
        description: "Date key (YYYYMMDD) of the month's last day"
        data_tests:
          - not_null

      # Previous year dates
      - name: month_start_last_year_dt
        description: "First day of the same month from the previous year"
        data_tests:
          - not_null

      - name: month_end_last_year_dt
        description: "Last day of the same month from the previous year"
        data_tests:
          - not_null

      # Month metrics
      - name: weeks_in_month_num
        description: "Number of distinct weeks that overlap with this month"
        data_tests:
          - not_null

      - name: days_in_month_num
        description: "Total number of days in the month (28-31)"
        data_tests:
          - not_null
          - accepted_values:
              values: [0, 1, 28, 29, 30, 31]
              config:
                where: "month_key > 0"

      - name: weekdays_in_month_num
        description: "Number of weekdays (Monday-Friday) in the month"
        data_tests:
          - not_null

      - name: weekend_days_in_month_num
        description: "Number of weekend days (Saturday-Sunday) in the month"
        data_tests:
          - not_null

      - name: first_week_of_month_num
        description: "Week number of the first week in this month"
        data_tests:
          - not_null

      - name: last_week_of_month_num
        description: "Week number of the last week in this month"
        data_tests:
          - not_null

      # Position metrics
      - name: month_in_quarter_num
        description: "Position of month within the quarter (1, 2, or 3)"
        data_tests:
          - not_null
          - accepted_values:
              values: [-3, -2, -1, 1, 2, 3]

      - name: month_overall_num
        description: "Sequential month number since base date, useful for month-over-month calculations"
        data_tests:
          - not_null

      - name: yearmonth_num
        description: "Year-month as integer (YYYYMM format)"
        data_tests:
          - not_null

      # Display formats
      - name: month_year_nm
        description: "Month and year display name (e.g., 'January 2023')"
        data_tests:
          - not_null

      - name: month_year_abbr
        description: "Month abbreviation and year (e.g., 'Jan 2023')"
        data_tests:
          - not_null

      - name: year_month_txt
        description: "Year-month formatted as YYYY-MM string"
        data_tests:
          - not_null

      - name: month_year_code_txt
        description: "Month code and year (e.g., 'M01 2023')"
        data_tests:
          - not_null

      # Current period flags
      - name: current_month_flg
        description: "Flag indicating if this is the current month"
        data_tests:
          - not_null
          - accepted_values:
              values: [0, 1]

      - name: prior_month_flg
        description: "Flag indicating if this is the prior month"
        data_tests:
          - not_null
          - accepted_values:
              values: [0, 1]

      - name: current_year_flg
        description: "Flag indicating if this month is in the current year"
        data_tests:
          - not_null
          - accepted_values:
              values: [0, 1]

      - name: past_month_flg
        description: "Flag indicating if this month has ended (month_end_dt < current date)"
        data_tests:
          - not_null
          - accepted_values:
              values: [0, 1]

      - name: future_month_flg
        description: "Flag indicating if this month has not started yet (month_start_dt > current date)"
        data_tests:
          - not_null
          - accepted_values:
              values: [0, 1]

      # Relative date calculations
      - name: months_ago_num
        description: "Number of months ago from current date (negative for future months, -999 for special records)"
        data_tests:
          - not_null

      - name: months_from_now_num
        description: "Number of months from now (negative for past months, -999 for special records)"
        data_tests:
          - not_null

      # Navigation keys
      - name: prior_month_key
        description: "Key for the prior month (null for first month)"

      - name: next_month_key
        description: "Key for the next month (null for last month)"

      - name: month_last_year_key
        description: "Key for the same month last year (12 months prior, null if not exists)"

      # Metadata columns
      - name: dw_synced_ts
        description: "Timestamp when record was created/updated"
        data_tests:
          - not_null

      - name: dw_source_nm
        description: "Source system name (always 'dim_month')"
        data_tests:
          - not_null
          - accepted_values:
              values: ['dim_month']

      - name: create_user_id
        description: "User who created the record"
        data_tests:
          - not_null
          - accepted_values:
              values: ['ETL_PROCESS']

      - name: create_ts
        description: "Timestamp when record was created"
        data_tests:
          - not_null

    data_tests:
      # Test that month key matches year and month
      - dbt_utils.expression_is_true:
          expression: "month_key = year_num * 100 + month_num"
          config:
            where: "month_key > 0"
            error_if: ">0"

      # Test that month start date is first of month
      - dbt_utils.expression_is_true:
          expression: "day(month_start_dt) = 1"
          config:
            where: "month_key > 0 and days_in_month_num >= 28"  # Only test complete months
            error_if: ">0"

      # Test that month end date is last day of month
      - dbt_utils.expression_is_true:
          expression: "month_end_dt = last_day(month_start_dt)"
          config:
            where: "month_key > 0 and days_in_month_num >= 28"  # Only test complete months
            error_if: ">0"

      # Test that weekdays + weekend days = total days
      - dbt_utils.expression_is_true:
          expression: "weekdays_in_month_num + weekend_days_in_month_num = days_in_month_num"
          config:
            where: "month_key > 0"
            error_if: ">0"

      # Test month in quarter values
      - dbt_utils.expression_is_true:
          expression: |
            case
              when month_num in (1, 4, 7, 10) then month_in_quarter_num = 1
              when month_num in (2, 5, 8, 11) then month_in_quarter_num = 2
              when month_num in (3, 6, 9, 12) then month_in_quarter_num = 3
              else true
            end
          config:
            where: "month_key > 0"
            error_if: ">0"

      # Test quarter assignment
      - dbt_utils.expression_is_true:
          expression: |
            case
              when month_num in (1, 2, 3) then quarter_num = 1
              when month_num in (4, 5, 6) then quarter_num = 2
              when month_num in (7, 8, 9) then quarter_num = 3
              when month_num in (10, 11, 12) then quarter_num = 4
              else true
            end
          config:
            where: "month_key > 0"
            error_if: ">0"

      # Test that current flags are mutually exclusive
      - dbt_utils.expression_is_true:
          expression: "past_month_flg + current_month_flg + future_month_flg <= 1"
          config:
            where: "month_key > 0"
            error_if: ">0"
